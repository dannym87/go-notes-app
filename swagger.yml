openapi: 3.0.0

info:
  version: 1.0.0
  title: Notes API

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  "/v1/notes":
    get:
      description: List all notes
      operationId: listNotes
      tags:
        - notes
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/PageNumberParam"
      responses:
        200:
          "$ref": "#/components/responses/NotesResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
    post:
      description: Create a note
      operationId: createNote
      tags:
        - notes
      security:
        - BearerAuth: []
      requestBody:
        "$ref": "#/components/requestBodies/NoteBody"
      responses:
        201:
          "$ref": "#/components/responses/NoteResponse"
        400:
          "$ref": "#/components/responses/ErrorsResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        422:
          "$ref": "#/components/responses/ErrorsResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
  "/v1/notes/{noteId}":
    get:
      description: Info for a specific note
      operationId: showNoteById
      tags:
        - notes
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/NoteIdParam"
      responses:
        200:
          "$ref": "#/components/responses/NoteResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
    delete:
      description: Delete a specific note
      operationId: deleteNoteById
      tags:
        - notes
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/NoteIdParam"
      responses:
        204:
          "$ref": "#/components/responses/NoContentResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
    patch:
      description: Update a specific note
      operationId: updateNoteById
      tags:
        - notes
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/NoteIdParam"
      requestBody:
        "$ref": "#/components/requestBodies/NoteBody"
      responses:
        200:
          "$ref": "#/components/responses/NoteResponse"
        400:
          "$ref": "#/components/responses/ErrorsResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        422:
          "$ref": "#/components/responses/ErrorsResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
  "/v1/tags":
    get:
      description: List all tags
      operationId: listTags
      tags:
        - tags
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/PageNumberParam"
      responses:
        200:
          "$ref": "#/components/responses/TagsResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
    post:
      description: Create a tag
      operationId: createTag
      tags:
        - tags
      security:
        - BearerAuth: []
      requestBody:
        "$ref": "#/components/requestBodies/TagBody"
      responses:
        201:
          "$ref": "#/components/responses/TagResponse"
        400:
          "$ref": "#/components/responses/ErrorsResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        422:
          "$ref": "#/components/responses/ErrorsResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
  "/v1/tags/{tagId}":
    get:
      description: Info for a specific tag
      operationId: showTagById
      tags:
        - tags
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/TagIdParam"
      responses:
        200:
          "$ref": "#/components/responses/TagResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
    delete:
      description: Delete a specific tag
      operationId: deleteTagById
      tags:
        - tags
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/TagIdParam"
      responses:
        204:
          "$ref": "#/components/responses/NoContentResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"
    patch:
      description: Update a specific tag
      operationId: updateTagById
      tags:
        - tags
      security:
        - BearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/TagIdParam"
      requestBody:
        "$ref": "#/components/requestBodies/TagBody"
      responses:
        200:
          "$ref": "#/components/responses/TagResponse"
        400:
          "$ref": "#/components/responses/ErrorsResponse"
        401:
          "$ref": "#/components/responses/UnauthorisedResponse"
        422:
          "$ref": "#/components/responses/ErrorsResponse"
        404:
          "$ref": "#/components/responses/NotFoundResponse"

components:

  # ------------------------------------
  # Schemas
  # ------------------------------------
  schemas:

    Note:
      type: object
      required:
        - title
      properties:
        id:
          type: integer
        title:
          type: string
        text:
          type: string
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/Tag"
        created_at:
          description: ISO 8601 Date/Time
          type: string
          format: date-time
        updated_at:
          description: ISO 8601 Date/Time
          type: string
          format: date-time

    Notes:
      type: array
      items:
        "$ref": "#/components/schemas/Note"

    Tag:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          description: ISO 8601 Date/Time
          type: string
          format: date-time
        updated_at:
          description: ISO 8601 Date/Time
          type: string
          format: date-time

    Tags:
      type: array
      items:
        "$ref": "#/components/schemas/Tag"

    Error:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        status:
          type: integer

  # ------------------------------------
  # Parameters
  # ------------------------------------
  parameters:

    PageNumberParam:
      name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer

    NoteIdParam:
      name: noteId
      in: path
      required: true
      description: The note Id
      schema:
        type: string

    TagIdParam:
      name: tagId
      in: path
      required: true
      description: The tag Id
      schema:
        type: string

  # ------------------------------------
  # Request Bodies
  # ------------------------------------
  requestBodies:

    NoteBody:
      description: The note resource
      required: true
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Note"

    TagBody:
      description: The tag resource
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Tag"

  # ------------------------------------
  # Responses
  # ------------------------------------
  responses:

    NotesResponse:
      description: A paged collection of notes
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Note"

    NoteResponse:
      description: A note resource
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                "$ref": "#/components/schemas/Note"

    TagsResponse:
      description: A paged collection of tags
      content:
        application/json:
          schema:
            title: Tags
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Tag"

    TagResponse:
      description: A tag resource
      content:
        application/json:
          schema:
            title: Tag
            type: object
            required:
              - data
            properties:
              data:
                "$ref": "#/components/schemas/Tag"

    NoContentResponse:
      description: No content for a successful request

    # Error responses
    ErrorsResponse:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                items:
                  "$ref": "#/components/schemas/Error"

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Not Found
                    detail:
                      type: string
                      example: The requested resource does not exist
                    status:
                      type: integer
                      example: 404

    UnauthorisedResponse:
      description: You don't have permission for this resource
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Unauthorised
                    detail:
                      type: string
                      example: You don't have permission for this resource
                    status:
                      type: integer
                      example: 401

  # ------------------------------------
  # Security Schemes
  # ------------------------------------
  securitySchemes:

    BearerAuth:
      type: http
      scheme: bearer

    OAuth2Password:
      type: oauth2
      description: Login with username/password
      flows:
        password:
          tokenUrl: /token
